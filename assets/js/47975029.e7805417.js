"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[9756],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(n),d=a,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},982:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7294),a=n(6010),i=n(9960),o="DocsButton_Wv58";var c=function(e){var t=e.text,n=e.link;return r.createElement(i.Z,{className:(0,a.Z)("button button--lg",o),to:n},t)}},8494:function(e,t,n){n.d(t,{IK:function(){return o},rJ:function(){return c}});var r=n(7294),a=n(4996),i=n(9750);function o(e){var t=e.src,n=e.width,i=e.title;return r.createElement("img",{src:(0,a.Z)(t),width:n,title:i,alt:i})}function c(e){var t=e.srcLight,n=e.srcDark,o=e.width,c=e.title;return r.createElement(i.Z,{sources:{light:(0,a.Z)(t),dark:(0,a.Z)(n)},width:o,title:c})}},6878:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return f},assets:function(){return d},toc:function(){return m},default:function(){return b}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(982),c=n(5551),s=n(8494),u=["components"],l={title:"API Reference",sidebar_position:99},p="API Reference",f={unversionedId:"api",id:"version-v21.11/api",title:"API Reference",description:"<ButtonLink",source:"@site/versioned_docs/version-v21.11/api.mdx",sourceDirName:".",slug:"/api",permalink:"/test-new-site/docs/api",editUrl:"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/docusaurus/versioned_docs/version-v21.11/api.mdx",tags:[],version:"v21.11",sidebarPosition:99,frontMatter:{title:"API Reference",sidebar_position:99},sidebar:"docs",previous:{title:"Running Tests",permalink:"/test-new-site/docs/tests"}},d={},m=[],g={toc:m};function b(e){var t=e.components,n=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-reference"},"API Reference"),(0,i.kt)(o.Z,{text:"Go to Doxygen API reference",link:"pathname:///api-docs/"+(0,c.zu)().label.toLowerCase(),mdxType:"ButtonLink"}),(0,i.kt)("br",null),(0,i.kt)("br",null),"PcapPlusPlus consists of 3 libraries:",(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Packet++")," - a library for parsing, creating and editing network packets"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Pcap++")," - a library for intercepting and sending packets, providing network and NIC info, stats, etc. It is actually a C++ wrapper for packet capturing engines such as libpcap, WinPcap, Npcap, DPDK and PF_RING"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Common++")," - a library with some common code utilities used by both Packet++ and Pcap++")),(0,i.kt)("p",null,"The dependency model between the libraries is as follows:"),(0,i.kt)(s.rJ,{srcLight:"/api-docs/libraries-light.svg",srcDark:"/api-docs/libraries-dark.svg",mdxType:"ThemedImageWithBaseUrl"}),(0,i.kt)("p",null,"That means, you can use ",(0,i.kt)("strong",{parentName:"p"},"Common++")," separately from the other libraries, and you can also use ",(0,i.kt)("strong",{parentName:"p"},"Packet++")," without ",(0,i.kt)("strong",{parentName:"p"},"Pcap++"),"."),(0,i.kt)("p",null,"All of PcapPlusPlus APIs including classes for all of these libraries, files, data structures, etc. are documented in details using ",(0,i.kt)("a",{parentName:"p",href:"http://www.doxygen.nl/"},"Doxygen"),"."))}b.isMDXComponent=!0}}]);